#! /bin/bash
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Linux - Pre/Post-check
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# -------------------------------------------------
# This script To check the Post Validation of patching
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Version 0.1 Script Created With Kernel version Check
#Version 0.2 Added SDK Patch,11.3 Patch Check


#####################################
##### Variables
#####################################

case "$1" in
'PRE')
 LOG=PRE
         ;;
'POST')
 LOG=POST
         ;;
*)
        echo "Usage: $0 { PRE | POST }"
        exit 1
        ;;
esac

RE='\e[0;31m'
BL='\e[0;34m'
GR='\e[0;32m'
GA='\e[0;36m'
BR='\e[0;33m'
NC='\e[0m'
VER="7.1.0-2"
NMON="14g"
SAM="3.4.3-1.40.3"
VVER="9.0.5.21789"
RP="/bin/rpm"
IS="INSTALLED SUCCESSFULLY"
VEER="3.0.82-0.7.9"
VERR="1.2.10-737.23.43"
CP="/bin/cp"
TM="/tmp/temp"
SED="/bin/sed"
AL="/etc/aliases"
MV="/bin/mv"
EC="$(ls -l /usr/bin/crontab | cut -c 8-10)"
CE="r-x"
LS="/bin/ls"
CR="/usr/bin/crontab"
DIR="/opt/app/EAS/was/"
APA="/usr/sbin/apache2ctl"
CAT="/bin/cat"
WINB="winbind"
NFS="nfs"
NFSS="nfsserver"


mkdir -p /var/tmp/precheck
OUTPUTFILE="/var/tmp/precheck/check-${LOG}-$HOSTNAME-$(date +%Y-%m-%d).txt"
IP=$(ip route get 8.8.8.8 | awk '/8.8.8.8/ {print $NF}')
#ROOT CHECK
clear
ID=`id | sed 's/uid=\([0-9]*\)(.*/\1/'`
if [ "$ID" != "0" ] ; then
        echo "You must be root to execute the script $0."
        exit 1
fi

#HOST INFORMATION
linuxhost() {
echo ""
echo "HOST INFORMATION"
echo "----------------"
echo ""
echo "Physical Or Virtual Machine"
echo "------------------"
dmidecode -s system-product-name
echo ""
uname -a
echo ""
cat /etc/*-release
echo ""
echo ""
echo "UPTIME & USER INFO"
echo "------------------"
echo ""
/usr/bin/uptime
who
echo ""
echo "Time Zone & Date"
echo "----------"
timedatectl
echo ""
echo "NTP STATUS"
echo "----------"
ntpq -pn
echo ""
echo "List Duplicate User Account UID with no.of iterations"
echo "-------------------------------"
awk -F: '{print $3}' /etc/passwd|sort |uniq -dc
echo ""
echo "List Duplicate Group Account GID with no.of iterations"
echo "-------------------------------"
awk -F: '{print $3}' /etc/group|sort |uniq -dc
echo ""
echo "SYSTEMD STATUS"
echo "----------"
systemctl list-unit-files
}

#Disk Information
linuxdisk() {
echo ""
echo "Filesystem Information"
echo "----------------------"
echo ""
fdisk -l 2>/dev/null
echo ""
echo "FILE SYSTEMS: df -hP"
echo "---------------------"
echo ""
df -hP | column -t
echo ""
echo "FILE SYSTEM COUNT"
echo "-----------------"
df -hP | sort | wc -l
echo ""
echo "FILESYSTEM SORT: df -hP | sort"
echo "------------------------------"
df -hP | sort | column -t
echo ""
echo "FSTAB DETAILS:"
echo "--------------"
echo ""
cat /etc/fstab | column -t
echo ""
echo "MTAB OUTPUT"
echo "-----------"
cat /etc/mtab | column -t
echo ""
echo ""
echo "MOUNT DETAILS:"
echo "--------------"
echo ""
mount
echo ""
echo "IOSTAT DETAILS:"
echo "---------------"
echo ""
iostat
echo ""
echo "PV LIST DETAILS:"
echo "------------------"
echo ""
pvs
echo ""
echo "Volume Group LIST"
echo "----------------------"
echo ""
vgs
echo ""
echo "Logical Volume List"
echo "-------------"
echo ""
lvs
echo ""
}

#HArdware Information
linuxhardware() {
echo ""
echo "Hardware Information"
echo "---------------------"
echo ""
echo "NUMBER OF CPU's:"
echo "----------------"
echo ""
cat /proc/cpuinfo | egrep "processor|model name"
echo ""
echo "MEMORY INFORMATION:"
echo "-------------------"
echo ""
cat /proc/meminfo
echo ""
echo ""
free -m
echo ""
}

#NETWORK INFORMATION
linuxnetwork() {
echo ""
echo "NETWORK INFORMATIONS"
echo "--------------------"
echo ""
echo "IFCONFIG INFO"
echo "-------------"
echo ""
ifconfig -a
echo ""
echo "NIC FDX/HDX - SPEED"
echo "-------------------"
echo ""
ETH=`/sbin/ifconfig -a | grep Link | grep HWaddr |awk  '{print $1}'`
for EN in $ETH
do
ethtool $EN
done
echo ""
echo "ROUTES DETAILS:"
echo "--------------"
echo ""
netstat -rn
echo ""
echo "NETSTAT -IN"
echo "------------"
echo ""
netstat -in
echo ""
echo "cat /etc/hosts "
echo "----------------"
cat /etc/hosts |sed -e '/^#/d'
echo ""
echo "cat /etc/resolv.conf"
echo "--------------------"
cat /etc/resolv.conf | sed -e '/^#/d'
echo ""
}

#Service List
linuxservice()
{
echo ""
echo "SHOWMOUNT FOR LOCALHOST"
echo "-----------------------"
echo ""
showmount -e localhost
echo ""
echo "MOUNTED IN CLIENT SIDE"
echo "----------------------"
netstat -apn | grep  $IP:2049
echo ""
cp -rvf /etc/exports{,-${LOG}-`date +%F`.bak}
}

linuxapache(){
echo ""
echo "APACHE INFORMATION"
echo "------------------"
cat /usr/sbin/apache2ctl |grep -n LD
echo ""
echo "APACHE BACKUP"
echo "--------------"
cp -rvf /usr/sbin/apache2ctl{,-${LOG}-`date +%F`.bak}
echo ""
echo "CRONTAB LIST"
echo "------------"
crontab -l
echo ""
echo ""
echo "SYSCTL"
echo "-------"
sysctl -a
echo ""
echo ""
echo "SYSCTL TCP"
echo "----------"
sysctl -a | grep -i TCP
echo ""
echo ""
echo "ULIMIT SETINGS"
echo "---------------"
ulimit -a
echo ""
echo ""
echo "LOGIN DEFS"
echo "-----------"
cat /etc/login.defs
echo ""
echo ""
echo "NSSWITCH OUTPUT"
echo "---------------"
cat /etc/nsswitch.conf
echo ""
echo ""
echo "SECQURITY LIMITS CONF"
echo "---------------------"
cat /etc/security/limits.conf
echo ""
echo ""

}

linuxrpm() {
rpm -qa | sort -u > "/var/tmp/precheck/$HOSTNAME-${LOG}-rpm.out"
echo ""
}

linuxerror() {
echo "Error Logs"
echo "-----------"
echo ""
grep -i FATAL /var/log/messages | cut -d' ' -f6- | sed -e "s/[0-9]/0/g" | sort | uniq
grep -i ERROR /var/log/messages | cut -d' ' -f6- | sed -e "s/[0-9]/0/g" | sort | uniq
echo ""
echo "Dmesg Logs"
echo "----------"
echo ""
dmesg | grep -i fail | sed -e "s/[0-9]/0/g" | sort | uniq
dmesg | grep -i error | sed -e "s/[0-9]/0/g" | sort | uniq
}

linuxback() {

echo "BACKUP FILES"
echo "------------"
cp -rvf /etc/fstab /etc/fstab-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/passwd /etc/passwd-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/group /etc/group-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/shadow /etc/shadow-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/sudoers /etc/sudoers-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/resolv.conf /etc/resolv.conf-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/login.defs /etc/login.defs-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/security/pam_winbind.conf /etc/security/pam_winbind.conf-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/postfix/main.cf /etc/postfix/main.cf-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/sysconfig/network-scripts/ /etc/sysconfig/network-scripts${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/pam.d/ /etc/pam.d-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/profile /etc/profile-${LOG}-$(date +%Y-%m-%d)
cp -rvf /etc/hosts /etc/hosts-${LOG}-$(date +%Y-%m-%d)

}


###PLATFORM INFORMATION###
case `uname` in
Linux)
echo "Generating system stats please wait (can take a few minutes on slow systems)"
echo ""
echo "File generated on `date`" > $OUTPUTFILE
echo ""
echo "Host Information . . . . . 10%"
linuxhost >> $OUTPUTFILE
echo "Disk Information . . . . . 20%"
linuxdisk >> $OUTPUTFILE
echo "Hardware Information . . . . . 30%"
linuxhardware >> $OUTPUTFILE
echo "Network Information . . . . . 40%"
linuxnetwork >> $OUTPUTFILE
echo "Apache Information . . . . . 50%"
linuxapache >> $OUTPUTFILE
echo "Service Information . . . . . 60%"
linuxservice >> $OUTPUTFILE
echo "RPM Information . . . . . 70%"
linuxrpm >> $OUTPUTFILE
echo "ERROR Information . . . . . 80%"
linuxerror >> $OUTPUTFILE
echo "Backup Information . . . . . 100%"
linuxback >> $OUTPUTFILE
echo ""
echo "File generated at $OUTPUTFILE on `date`"
exit
;;

*)
exit 1
esac
